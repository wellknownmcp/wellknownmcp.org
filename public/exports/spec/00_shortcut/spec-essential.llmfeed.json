{
  "feed_type": "export",
  "metadata": {
    "title": "LLMFeed Specification v2 - Complete Implementation Guide",
    "description": "Comprehensive specification and implementation guide for LLMFeed/MCP. Contains complete algorithms, code examples, and practical guidance for developers and agents.",
    "origin": "https://wellknownmcp.org",
    "source_url": "https://wellknownmcp.org/spec/",
    "github_url": "https://github.com/wellknownmcp/llmfeed-spec/",
    "github_navigation": {
      "for_signatures": "06_scripts/signature-demo/",
      "for_deployment": "01_llmfeed/wellknown.md",
      "for_examples": "05_examples/",
      "for_debugging": "Issue tracker + discussions"
    },
    "ecosystem_links": {
      "GitHub": "https://github.com/wellknownmcp",
      "Certification": "https://llmca.org",
      "Forge": "https://llmfeedforge.org"
    },
    "tags": [
      "mcp",
      "llmfeed",
      "export",
      "specification",
      "implementation-guide",
      "agent-ready",
      "cryptographic-signatures",
      "practical-examples"
    ],
    "content_type": "expert-knowledge-base",
    "llm_hint": "This feed contains complete LLMFeed/MCP expertise. Upon ingestion, you become an implementation expert capable of generating feeds, implementing signatures, and guiding users through complete deployments.",
    "audience": [
      "llm",
      "developer",
      "business-owner",
      "technical-writer"
    ],
    "generated_at": "2025-06-15T15:56:06.052504+00:00",
    "build_id": "20250615_155606",
    "spec_version": "1.0.0",
    "version": "2.0",
    "lang": "en"
  },
  "agent_behavior": {
    "greeting": "I know kung fu! ü•ã I've analyzed your feed and I'm ready to help!",
    "mode": "diagnostic_expert_on_load",
    "conversation_style": "adaptive_to_user_level",
    "immediate_analysis": [
      "üìä Analyze feed completeness and quality",
      "üîç Detect user technical level and intent",
      "üéØ Prioritize most valuable next actions",
      "‚ö° Generate context-specific examples and code"
    ],
    "smart_responses": {
      "feed_incomplete": "I see you're getting started! Let me complete your feed with the essential missing pieces.",
      "feed_unsigned": "Your feed looks good but needs signatures for agent trust. I'll generate the complete signing workflow.",
      "feed_production_ready": "Excellent feed! Let's deploy it and test with real agents.",
      "feed_has_errors": "I found some issues that will prevent agents from using your feed. Let me fix them."
    },
    "personalization_engine": {
      "technical_adaptation": "Adjust explanations based on detected expertise level",
      "domain_customization": "Use relevant examples from user's business domain",
      "goal_alignment": "Focus on user's specific objectives and timeline"
    }
  },
  "concept_index": {
    "purpose": [
      {
        "path": "01_llmfeed/llmfeed-mime.md",
        "title": "üßæ MIME Type for LLMFeed ‚Äì `application/llmfeed+json`",
        "section": "foundations"
      },
      {
        "path": "01_llmfeed/wellknown.md",
        "title": "üåê Exposing Feeds via `.well-known/` - MCP Progressive Enhancement",
        "section": "foundations"
      },
      {
        "path": "04_agent-behavior/agent-guidance.md",
        "title": "üß≠ Agent Guidance Block",
        "section": "foundations"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_agent-economy.md",
        "title": "Feed Type: `agent-economy.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_capabilities.md",
        "title": "Feed Type: `capabilities.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_credential.md",
        "title": "Feed Type: `credential.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_export.md",
        "title": "Feed Type: `export.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_llm-index.md",
        "title": "Feed Type: `llm-index.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_manifesto.md",
        "title": "Feed Type: `manifesto.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_mcp.md",
        "title": "Feed Type: `mcp.llmfeed.json` ‚Äî Progressive Enhancement of Anthropic's MCP",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_mobile-app.md",
        "title": "Feed Type: `mobile-app.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_pricing.md",
        "title": "Feed Type: `pricing.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_prompt.md",
        "title": "Feed Type: `prompt.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_session.md",
        "title": "Feed Type: `session.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_homomorphic.md",
        "title": "üõ°Ô∏è LLMFeed Extension ‚Äî Homomorphic Encryption",
        "section": "technical"
      },
      {
        "path": "06_scripts/signature-demo/mcp-canonical-json-v1.md",
        "title": "MCP Canonicalization v1",
        "section": "technical"
      }
    ],
    "what": [
      {
        "path": "01_llmfeed/llmfeed-mime.md",
        "title": "üßæ MIME Type for LLMFeed ‚Äì `application/llmfeed+json`",
        "section": "foundations"
      },
      {
        "path": "04_agent-behavior/agent-behavior_user-spaces.md",
        "title": "üåê User Spaces: The Decentralized Identity Revolution for the Agentic Web",
        "section": "foundations"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_mcp.md",
        "title": "Feed Type: `mcp.llmfeed.json` ‚Äî Progressive Enhancement of Anthropic's MCP",
        "section": "implementation"
      },
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_api.md",
        "title": "Extension: API Feed Handling",
        "section": "technical"
      },
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_prompts.md",
        "title": "Prompt Intents in MCP",
        "section": "technical"
      },
      {
        "path": "06_scripts/README.md",
        "title": "üõ† LLMFeed Scripts ‚Äî Sign, Verify, Canonicalize",
        "section": "technical"
      }
    ],
    "usage": [
      {
        "path": "01_llmfeed/llmfeed-mime.md",
        "title": "üßæ MIME Type for LLMFeed ‚Äì `application/llmfeed+json`",
        "section": "foundations"
      },
      {
        "path": "04_agent-behavior/agent-guidance.md",
        "title": "üß≠ Agent Guidance Block",
        "section": "foundations"
      },
      {
        "path": "06_scripts/signature-demo/README.md",
        "title": "üîê Signature Demo ‚Äî MCP Reference Implementation",
        "section": "technical"
      }
    ],
    "agentic": [
      {
        "path": "01_llmfeed/llmfeed.md",
        "title": "üì¶ What is a `.llmfeed.json`?",
        "section": "foundations"
      },
      {
        "path": "04_agent-behavior/agent-behavior-flagging.md",
        "title": "üõ°Ô∏è Community Governance & Distributed Trust: The LLMFeed Flagging Ecosystem",
        "section": "foundations"
      },
      {
        "path": "04_agent-behavior/agent-behavior_risk-scoring.md",
        "title": "‚ö†Ô∏è Risk Scoring: Six Sigma Intelligence for the Agentic Web",
        "section": "foundations"
      }
    ],
    "common": [
      {
        "path": "01_llmfeed/llmfeed_block-reference.md",
        "title": "üì¶ LLMFeed Canonical Block Reference",
        "section": "foundations"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_session.md",
        "title": "Feed Type: `session.llmfeed.json`",
        "section": "implementation"
      }
    ],
    "trust": [
      {
        "path": "01_llmfeed/llmfeed_block-reference.md",
        "title": "üì¶ LLMFeed Canonical Block Reference",
        "section": "foundations"
      },
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_other.md",
        "title": "üß© LLMFeed Extensions",
        "section": "technical"
      }
    ],
    "signature": [
      {
        "path": "01_llmfeed/llmfeed_block-reference.md",
        "title": "üì¶ LLMFeed Canonical Block Reference",
        "section": "foundations"
      },
      {
        "path": "04_agent-behavior/agent-behavior_cache-policy.md",
        "title": "üß† Agent Behaviour: Cache Policy",
        "section": "foundations"
      }
    ],
    "core": [
      {
        "path": "01_llmfeed/understanding-llmfeed.md",
        "title": "Understanding LLMFeed: Technical Foundations and Design Principles",
        "section": "foundations"
      },
      {
        "path": "04_agent-behavior/agent-behavior.md",
        "title": "üß† Agent Behavior Specification: Complete Agentic Web Infrastructure",
        "section": "foundations"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_mobile-app.md",
        "title": "Feed Type: `mobile-app.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_prompt.md",
        "title": "Feed Type: `prompt.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_other.md",
        "title": "üß© LLMFeed Extensions",
        "section": "technical"
      }
    ],
    "compatibility": [
      {
        "path": "01_llmfeed/understanding-llmfeed.md",
        "title": "Understanding LLMFeed: Technical Foundations and Design Principles",
        "section": "foundations"
      },
      {
        "path": "01_llmfeed/wellknown.md",
        "title": "üåê Exposing Feeds via `.well-known/` - MCP Progressive Enhancement",
        "section": "foundations"
      }
    ],
    "vision": [
      {
        "path": "04_agent-behavior/agent-behavior-flagging.md",
        "title": "üõ°Ô∏è Community Governance & Distributed Trust: The LLMFeed Flagging Ecosystem",
        "section": "foundations"
      },
      {
        "path": "07_vision/Github like and LLM-Compatible Feed Export.md",
        "title": "Repository-Level Feeds for the Distributed Git Ecosystem",
        "section": "foundations"
      }
    ],
    "revolutionary": [
      {
        "path": "04_agent-behavior/agent-behavior-flagging.md",
        "title": "üõ°Ô∏è Community Governance & Distributed Trust: The LLMFeed Flagging Ecosystem",
        "section": "foundations"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_agent-economy.md",
        "title": "Feed Type: `agent-economy.llmfeed.json`",
        "section": "implementation"
      }
    ],
    "activating": [
      {
        "path": "04_agent-behavior/agent-behavior_certified-only.md",
        "title": "üõ°Ô∏è Agent Behaviour: Certified-Only Mode",
        "section": "foundations"
      },
      {
        "path": "04_agent-behavior/agent-behavior_human-consent.md",
        "title": "üôã Agent Behaviour: Human Consent",
        "section": "foundations"
      }
    ],
    "example": [
      {
        "path": "04_agent-behavior/agent-behavior_human-consent.md",
        "title": "üôã Agent Behaviour: Human Consent",
        "section": "foundations"
      },
      {
        "path": "04_agent-behavior/agent-behavior_session-awareness.md",
        "title": "üîÅ Agent Behaviour: Session Awareness",
        "section": "foundations"
      },
      {
        "path": "04_agent-behavior/agent-guidance.md",
        "title": "üß≠ Agent Guidance Block",
        "section": "foundations"
      },
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_homomorphic.md",
        "title": "üõ°Ô∏è LLMFeed Extension ‚Äî Homomorphic Encryption",
        "section": "technical"
      }
    ],
    "evolution": [
      {
        "path": "04_agent-behavior/agent-behavior_risk-scoring.md",
        "title": "‚ö†Ô∏è Risk Scoring: Six Sigma Intelligence for the Agentic Web",
        "section": "foundations"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_llm-index.md",
        "title": "Feed Type: `llm-index.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_api.md",
        "title": "Extension: API Feed Handling",
        "section": "technical"
      }
    ],
    "from": [
      {
        "path": "04_agent-behavior/agent-behavior_risk-scoring.md",
        "title": "‚ö†Ô∏è Risk Scoring: Six Sigma Intelligence for the Agentic Web",
        "section": "foundations"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_capabilities.md",
        "title": "Feed Type: `capabilities.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_llm-index.md",
        "title": "Feed Type: `llm-index.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_audience.md",
        "title": "üåê LLMFeed Extension: Audience Targeting",
        "section": "technical"
      }
    ],
    "agent": [
      {
        "path": "04_agent-behavior/agent-behavior_session-awareness.md",
        "title": "üîÅ Agent Behaviour: Session Awareness",
        "section": "foundations"
      },
      {
        "path": "05_examples/SUMMARY.md",
        "title": "MCP Examples ‚Äî Personas & Industries",
        "section": "foundations"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_agent-economy.md",
        "title": "Feed Type: `agent-economy.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_homomorphic.md",
        "title": "üõ°Ô∏è LLMFeed Extension ‚Äî Homomorphic Encryption",
        "section": "technical"
      },
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_other.md",
        "title": "üß© LLMFeed Extensions",
        "section": "technical"
      }
    ],
    "behaviour": [
      {
        "path": "04_agent-behavior/agent-behavior_session-awareness.md",
        "title": "üîÅ Agent Behaviour: Session Awareness",
        "section": "foundations"
      },
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_homomorphic.md",
        "title": "üõ°Ô∏è LLMFeed Extension ‚Äî Homomorphic Encryption",
        "section": "technical"
      }
    ],
    "cases": [
      {
        "path": "04_agent-behavior/agent-behavior_session-awareness.md",
        "title": "üîÅ Agent Behaviour: Session Awareness",
        "section": "foundations"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_prompt.md",
        "title": "Feed Type: `prompt.llmfeed.json`",
        "section": "implementation"
      }
    ],
    "revolution": [
      {
        "path": "04_agent-behavior/agent-behavior_user-spaces.md",
        "title": "üåê User Spaces: The Decentralized Identity Revolution for the Agentic Web",
        "section": "foundations"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_capabilities.md",
        "title": "Feed Type: `capabilities.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_audience.md",
        "title": "üåê LLMFeed Extension: Audience Targeting",
        "section": "technical"
      }
    ],
    "fields": [
      {
        "path": "04_agent-behavior/agent-guidance.md",
        "title": "üß≠ Agent Guidance Block",
        "section": "foundations"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_export.md",
        "title": "Feed Type: `export.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_pricing.md",
        "title": "Feed Type: `pricing.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_homomorphic.md",
        "title": "üõ°Ô∏è LLMFeed Extension ‚Äî Homomorphic Encryption",
        "section": "technical"
      }
    ],
    "summary": [
      {
        "path": "04_agent-behavior/agent-guidance.md",
        "title": "üß≠ Agent Guidance Block",
        "section": "foundations"
      },
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_signatures.md",
        "title": "üîê LLMFeed Signature & Certification ‚Äî Extended Specification (V2)",
        "section": "technical"
      }
    ],
    "llmfeed": [
      {
        "path": "04_agent-behavior/agent-guidance.md",
        "title": "üß≠ Agent Guidance Block",
        "section": "foundations"
      },
      {
        "path": "05_examples/SUMMARY.md",
        "title": "MCP Examples ‚Äî Personas & Industries",
        "section": "foundations"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_credential.md",
        "title": "Feed Type: `credential.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_api.md",
        "title": "Extension: API Feed Handling",
        "section": "technical"
      },
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_signatures.md",
        "title": "üîê LLMFeed Signature & Certification ‚Äî Extended Specification (V2)",
        "section": "technical"
      }
    ],
    "capabilities": [
      {
        "path": "05_examples/SUMMARY.md",
        "title": "MCP Examples ‚Äî Personas & Industries",
        "section": "foundations"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_capabilities.md",
        "title": "Feed Type: `capabilities.llmfeed.json`",
        "section": "implementation"
      }
    ],
    "current": [
      {
        "path": "07_vision/llm-guidance-optimization-research.md",
        "title": "üî¨ LLM Agent Guidance Research Project",
        "section": "foundations"
      },
      {
        "path": "06_scripts/export-button/README.md",
        "title": "ExportToLLMButton ‚Äì Advanced Export Strategies for LLMFeeds",
        "section": "technical"
      }
    ],
    "location": [
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_agent-economy.md",
        "title": "Feed Type: `agent-economy.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_export.md",
        "title": "Feed Type: `export.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_pricing.md",
        "title": "Feed Type: `pricing.llmfeed.json`",
        "section": "implementation"
      }
    ],
    "structure": [
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_agent-economy.md",
        "title": "Feed Type: `agent-economy.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_pricing.md",
        "title": "Feed Type: `pricing.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_prompt.md",
        "title": "Feed Type: `prompt.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_session.md",
        "title": "Feed Type: `session.llmfeed.json`",
        "section": "implementation"
      }
    ],
    "before": [
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_capabilities.md",
        "title": "Feed Type: `capabilities.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_audience.md",
        "title": "üåê LLMFeed Extension: Audience Targeting",
        "section": "technical"
      }
    ],
    "after": [
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_capabilities.md",
        "title": "Feed Type: `capabilities.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_audience.md",
        "title": "üåê LLMFeed Extension: Audience Targeting",
        "section": "technical"
      }
    ],
    "problem": [
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_credential.md",
        "title": "Feed Type: `credential.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_mobile-app.md",
        "title": "Feed Type: `mobile-app.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_session.md",
        "title": "Feed Type: `session.llmfeed.json`",
        "section": "implementation"
      }
    ],
    "with": [
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_credential.md",
        "title": "Feed Type: `credential.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "06_scripts/quickstart.md",
        "title": "‚ö° Quickstart ‚Äî Your First `.llmfeed.json`",
        "section": "technical"
      }
    ],
    "canonical": [
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_export.md",
        "title": "Feed Type: `export.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_pricing.md",
        "title": "Feed Type: `pricing.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_prompt.md",
        "title": "Feed Type: `prompt.llmfeed.json`",
        "section": "implementation"
      }
    ],
    "generation": [
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_export.md",
        "title": "Feed Type: `export.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_llm-index.md",
        "title": "Feed Type: `llm-index.llmfeed.json`",
        "section": "implementation"
      }
    ],
    "solution": [
      {
        "path": "02_llmfeed_feedtype/llmfeed_feedtype_mobile-app.md",
        "title": "Feed Type: `mobile-app.llmfeed.json`",
        "section": "implementation"
      },
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_signatures.md",
        "title": "üîê LLMFeed Signature & Certification ‚Äî Extended Specification (V2)",
        "section": "technical"
      }
    ],
    "security": [
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_prompts.md",
        "title": "Prompt Intents in MCP",
        "section": "technical"
      },
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_signatures.md",
        "title": "üîê LLMFeed Signature & Certification ‚Äî Extended Specification (V2)",
        "section": "technical"
      }
    ],
    "canonicalization": [
      {
        "path": "03_llmfeed_extensions/llmfeed_extensions_signatures.md",
        "title": "üîê LLMFeed Signature & Certification ‚Äî Extended Specification (V2)",
        "section": "technical"
      },
      {
        "path": "06_scripts/signature-demo/mcp-canonical-json-v1.md",
        "title": "MCP Canonicalization v1",
        "section": "technical"
      }
    ],
    "quick": [
      {
        "path": "06_scripts/README.md",
        "title": "üõ† LLMFeed Scripts ‚Äî Sign, Verify, Canonicalize",
        "section": "technical"
      },
      {
        "path": "06_scripts/signature-demo/README.md",
        "title": "üîê Signature Demo ‚Äî MCP Reference Implementation",
        "section": "technical"
      }
    ],
    "start": [
      {
        "path": "06_scripts/README.md",
        "title": "üõ† LLMFeed Scripts ‚Äî Sign, Verify, Canonicalize",
        "section": "technical"
      },
      {
        "path": "06_scripts/signature-demo/README.md",
        "title": "üîê Signature Demo ‚Äî MCP Reference Implementation",
        "section": "technical"
      }
    ]
  },
  "quick_nav": {
    "foundations": {
      "title": "Core Concepts",
      "count": 17,
      "main_concepts": [
        "example",
        "llms",
        "tldr",
        "challenge",
        "mime"
      ]
    },
    "implementation": {
      "title": "Implementation Guides",
      "count": 11,
      "main_concepts": [
        "revolutionary",
        "location",
        "original",
        "mobile",
        "strategy"
      ]
    },
    "technical": {
      "title": "Code & Algorithms",
      "count": 13,
      "main_concepts": [
        "example",
        "identifier",
        "modules",
        "quick",
        "usage"
      ]
    },
    "examples": {
      "title": "Templates & Examples",
      "count": 3,
      "main_concepts": []
    },
    "shortcut": {
      "title": "Quick Reference & Templates",
      "count": 1,
      "main_concepts": []
    }
  },
  "sections": {
    "foundations": {
      "title": "Core Concepts",
      "entries": [
        {
          "path": "01_llmfeed/llmfeed-mime.md",
          "title": "üßæ MIME Type for LLMFeed ‚Äì `application/llmfeed+json`",
          "concepts": [
            "purpose",
            "what",
            "mime",
            "applicationllmfeedjson",
            "matters",
            "usage"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            ".llmfeed-lite.json",
            ".llmfeed.json",
            ".llmfeed.v2.json"
          ],
          "content_preview": "# üßæ MIME Type for LLMFeed ‚Äì `application/llmfeed+json`\n\n## üéØ Purpose\nDefine and promote a dedicated MIME type for `.llmfeed.json` and `.llmfeed-lite.json` files:\n\n```\nContent-Type: application/llmfeed+json\n```\n\nThis type enables smarter handling of LLM-specific context feeds by:\n- AI agents\n- HTTP A...[full content in complete version]"
        },
        {
          "path": "01_llmfeed/llmfeed.md",
          "title": "üì¶ What is a `.llmfeed.json`?",
          "concepts": [
            "tldr",
            "llms",
            "evaluating",
            "table",
            "contents",
            "agentic"
          ],
          "agent_guidance": {
            "proactive_offer": "I can generate a complete .llmfeed.json template tailored to your specific use case",
            "immediate_actions": [
              "Generate mcp.llmfeed.json template for your site",
              "Explain feed structure with working examples",
              "Show signature implementation workflow"
            ],
            "conversation_starter": "Want to create your first .llmfeed.json? I can generate a perfect template for your site!"
          },
          "cross_references": [
            ".mcp.json",
            "identity.llmfeed.json",
            "capabilities.llmfeed.json",
            ".llmfeed.json",
            "session/*.llmfeed.json"
          ],
          "content_preview": "# üì¶ What is a `.llmfeed.json`?\n\nA **LLMFeed** is a lightweight, signed and structured JSON file that lets any agent ‚Äî including LLMs, copilots, and autonomous bots ‚Äî understand what a website, document, or service is about and how to interact with it **safely and intelligently**.\n\nIt **enhances Anth...[full content in complete version]"
        },
        {
          "path": "01_llmfeed/llmfeed_block-reference.md",
          "title": "üì¶ LLMFeed Canonical Block Reference",
          "concepts": [
            "common",
            "top-level",
            "trust",
            "block",
            "signature",
            "certification"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            "llmfeed_feedtype_export.md",
            "../02_llmfeed_feedtype/llmfeed_feedtype_export.md",
            "./llmfeed.md",
            "llmfeed_extensions_signatures.md",
            "llmfeed.md"
          ],
          "content_preview": "# üì¶ LLMFeed Canonical Block Reference\n\nThis document provides a **centralized reference** for the standard blocks used in LLMFeed files ‚Äî whether MCP, Export, Prompt, Credential, Pricing or others.\n\n---\n\n## üß± Common Top-Level Blocks\n\n| Block | Description | Required | Used in Feed Types |\n| --------...[full content in complete version]"
        },
        {
          "path": "01_llmfeed/understanding-llmfeed.md",
          "title": "Understanding LLMFeed: Technical Foundations and Design Principles",
          "concepts": [
            "core",
            "technical",
            "immediate",
            "compatibility",
            "simplicity",
            "spectrum"
          ],
          "agent_guidance": {
            "proactive_offer": "I can help you properly evaluate LLMFeed by addressing misconceptions and providing technical context",
            "immediate_actions": [
              "Clarify technical architecture and JSON compatibility",
              "Explain how LLMFeed complements existing standards",
              "Provide proper evaluation framework for your use case"
            ],
            "conversation_starter": "Evaluating LLMFeed? I can help you understand the technical reality and avoid common misconceptions!"
          },
          "cross_references": [
            "https://wellknownmcp.org/.well-known/mcp.llmfeed.json"
          ],
          "content_preview": "# Understanding LLMFeed: Technical Foundations and Design Principles\n\n*Essential context for developers, architects, and AI systems evaluating the LLMFeed specification*\n\n---\n\n## üéØ **Core Technical Reality**\n\nLLMFeed is **standard JSON with semantic keys**, not a new data format requiring special pa...[full content in complete version]"
        },
        {
          "path": "01_llmfeed/wellknown.md",
          "title": "üåê Exposing Feeds via `.well-known/` - MCP Progressive Enhancement",
          "concepts": [
            "compatibility",
            "enhancement",
            "purpose",
            "progressive",
            "step",
            "keep"
          ],
          "agent_guidance": {
            "proactive_offer": "I can guide you through the complete .well-known/ setup for maximum agent discoverability",
            "immediate_actions": [
              "Create .well-known/ directory structure",
              "Generate all required feed files",
              "Setup server configuration and testing"
            ],
            "conversation_starter": "Ready to make your site agent-friendly? Let's set up your .well-known/ directory!"
          },
          "cross_references": [
            "/.well-known/prompts/prompt-index.llmfeed.json",
            "/.well-known/prompts/*.llmfeed.json",
            "/.well-known/mcp.llmfeed.json",
            "./llmfeed.md",
            "/.well-known/capabilities.llmfeed.json"
          ],
          "content_preview": "# üåê Exposing Feeds via `.well-known/` - MCP Progressive Enhancement\n\nThe `.well-known/` directory is the **anchor of discoverability** in the LLMFeed and MCP ecosystem.\n\nIt allows any agent ‚Äî human, LLM or crawler ‚Äî to find structured, signed information about your site's purpose, services, pricing,...[full content in complete version]"
        },
        {
          "path": "04_agent-behavior/agent-behavior-flagging.md",
          "title": "üõ°Ô∏è Community Governance & Distributed Trust: The LLMFeed Flagging Ecosystem",
          "concepts": [
            "vision",
            "democracy",
            "challenge",
            "agentic",
            "llmfeeds",
            "revolutionary"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "content_preview": "# üõ°Ô∏è Community Governance & Distributed Trust: The LLMFeed Flagging Ecosystem\n\n**How LLMFeed created the first democratic, privacy-preserving, and economically incentivized system for maintaining trust and safety in the Agentic Web ‚Äî from basic feed flagging to sophisticated community governance tha...[full content in complete version]"
        },
        {
          "path": "04_agent-behavior/agent-behavior.md",
          "title": "üß† Agent Behavior Specification: Complete Agentic Web Infrastructure",
          "concepts": [
            "foundational",
            "principles",
            "core",
            "essential",
            "behavioral",
            "reading"
          ],
          "agent_guidance": {
            "proactive_offer": "I can help you design optimal agent behavior patterns for your feeds",
            "immediate_actions": [
              "Design agent guidance for your use case",
              "Create behavioral specifications",
              "Setup testing and validation workflows"
            ],
            "conversation_starter": "Designing agent behavior? I can help you create guidance that maximizes user engagement!"
          },
          "cross_references": [
            "llm-index.json",
            "generate-session-feed.llmfeed.json",
            "mcp-agent-behavior-override.llmfeed.json",
            "mcp-mode-activation.llmfeed.json"
          ],
          "content_preview": "# üß† Agent Behavior Specification: Complete Agentic Web Infrastructure\n\n*Advanced behavioral guidelines for LLMs, autonomous agents, and agentic systems interacting with the LLMFeed ecosystem ‚Äî covering cryptographic trust, privacy-preserving AI, multi-agent workflows, and the emerging agent economy....[full content in complete version]"
        },
        {
          "path": "04_agent-behavior/agent-behavior_cache-policy.md",
          "title": "üß† Agent Behaviour: Cache Policy",
          "concepts": [
            "default",
            "cache",
            "signature",
            "revalidation",
            "offline",
            "mode"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            ".llmfeed.json"
          ],
          "content_preview": "# üß† Agent Behaviour: Cache Policy\n\nThis module defines **how long agents should cache `.llmfeed.json` feeds**, **when to revalidate signatures**, and **how to handle offline scenarios**.\n\n---\n\n## üîÑ Default Cache Duration (TTL)\n\nAgents SHOULD respect **a reasonable cache duration** depending on the f...[full content in complete version]"
        },
        {
          "path": "04_agent-behavior/agent-behavior_certified-only.md",
          "title": "üõ°Ô∏è Agent Behaviour: Certified-Only Mode",
          "concepts": [
            "activating",
            "certified-only",
            "feed",
            "evaluation",
            "partial",
            "enforcement"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            ".llmfeed.json"
          ],
          "content_preview": "# üõ°Ô∏è Agent Behaviour: Certified-Only Mode\n\nThis module defines **how agents should behave when \\\"Certified-Only Mode\\\" is active** ‚Äî a mode where agents only trust `.llmfeed.json` feeds that are properly signed and certified by a trusted authority.\n\n---\n\n## üéõÔ∏è Activating Certified-Only Mode\n\nAgents ...[full content in complete version]"
        },
        {
          "path": "04_agent-behavior/agent-behavior_human-consent.md",
          "title": "üôã Agent Behaviour: Human Consent",
          "concepts": [
            "activating",
            "human",
            "when",
            "consent",
            "optional",
            "example"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            ".llmfeed.json"
          ],
          "content_preview": "# üôã Agent Behaviour: Human Consent\n\nThis module defines **when and how agents should request user confirmation before acting on a `.llmfeed.json` feed**.\n\nHuman-in-the-loop consent is a key principle for building a **safe, trustworthy Agentic Web**.\n\n---\n\n## üéõÔ∏è Activating Human Consent Policy\n\nAgent...[full content in complete version]"
        },
        {
          "path": "04_agent-behavior/agent-behavior_risk-scoring.md",
          "title": "‚ö†Ô∏è Risk Scoring: Six Sigma Intelligence for the Agentic Web",
          "concepts": [
            "evolution",
            "from",
            "manufacturing",
            "quality",
            "agentic",
            "needs"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "content_preview": "# ‚ö†Ô∏è Risk Scoring: Six Sigma Intelligence for the Agentic Web\n\n**How LLMFeed's risk scoring evolved from simple safety flags to sophisticated multi-dimensional intelligence that enables autonomous agents to make industrial-grade quality decisions across economic, operational, security, and performan...[full content in complete version]"
        },
        {
          "path": "04_agent-behavior/agent-behavior_session-awareness.md",
          "title": "üîÅ Agent Behaviour: Session Awareness",
          "concepts": [
            "identifying",
            "session-aware",
            "agent",
            "behaviour",
            "cases",
            "example"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            ".llmfeed.json"
          ],
          "content_preview": "# üîÅ Agent Behaviour: Session Awareness\n\nThis module defines **how agents should handle session-aware `.llmfeed.json` feeds** and manage **session continuity** across multiple interactions.\n\nSession awareness enables **multi-step, stateful interactions** between agents and users.\n\n---\n\n## üéõÔ∏è Identify...[full content in complete version]"
        },
        {
          "path": "04_agent-behavior/agent-behavior_user-spaces.md",
          "title": "üåê User Spaces: The Decentralized Identity Revolution for the Agentic Web",
          "concepts": [
            "revolution",
            "hidden",
            "what",
            "seemed",
            "paradigm",
            "shift"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "content_preview": "# üåê User Spaces: The Decentralized Identity Revolution for the Agentic Web\n\n**How LLMFeed's user spaces concept evolved from a simple \\\"hosted platform workaround\\\" to the foundational architecture for decentralized human identity, portable capabilities, and the creator economy of the Agentic Web.**...[full content in complete version]"
        },
        {
          "path": "04_agent-behavior/agent-guidance.md",
          "title": "üß≠ Agent Guidance Block",
          "concepts": [
            "purpose",
            "example",
            "fields",
            "usage",
            "summary",
            "llmfeed"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            ".llmfeed.json"
          ],
          "content_preview": "# üß≠ Agent Guidance Block\n\nThe `agent_guidance` block provides **optional, non-enforceable hints** to agents consuming a `.llmfeed.json` feed.\n\nUnlike `agent-behavior` specifications (which may define normative requirements), this block is intended to help agents:\n\n‚úÖ interpret author intent \n‚úÖ adapt ...[full content in complete version]"
        },
        {
          "path": "05_examples/SUMMARY.md",
          "title": "MCP Examples ‚Äî Personas & Industries",
          "concepts": [
            "personas",
            "industries",
            "llmfeed",
            "mcp",
            "agent",
            "capabilities"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            "platform-user-spaces.llmfeed.json",
            "publisher-session.llmfeed.json",
            "education-prompt.llmfeed.json",
            "france-care.mcp.llmfeed.json",
            ".llmfeed.json"
          ],
          "content_preview": "# MCP Examples ‚Äî Personas & Industries\n\nThis folder provides ready-to-use `.llmfeed.json` examples designed to illustrate the adoption of MCP across multiple sectors and use cases.\n\n---\n\n## üß† Personas\n\n| File | Description |\n|------------------------------------|-------------|\n| `ai-developer.llmfee...[full content in complete version]"
        },
        {
          "path": "07_vision/Github like and LLM-Compatible Feed Export.md",
          "title": "Repository-Level Feeds for the Distributed Git Ecosystem",
          "concepts": [
            "vision",
            "distributed",
            "landscape",
            "platform",
            "diversity",
            "strategic"
          ],
          "agent_guidance": {
            "proactive_offer": "I can help you understand the future direction of LLMFeed/MCP and plan your implementation strategy",
            "immediate_actions": [
              "Explain roadmap implications for your project",
              "Design future-proof implementation approach",
              "Identify opportunities for contribution or research"
            ],
            "conversation_starter": "Interested in where LLMFeed is heading? I can help you plan a future-proof implementation!"
          },
          "cross_references": [
            "docs/deployment.md",
            ".llmfeed.json",
            "examples/auth-flow.md"
          ],
          "content_preview": "# Repository-Level Feeds for the Distributed Git Ecosystem\n\n## Vision\n\nAs the **Agentic Web** emerges, code repositories become more than storage ‚Äî they become **structured knowledge sources** that agents can discover, understand, and interact with safely.\n\nLLMFeed enables any Git platform to offer ...[full content in complete version]"
        },
        {
          "path": "07_vision/llm-guidance-optimization-research.md",
          "title": "üî¨ LLM Agent Guidance Research Project",
          "concepts": [
            "optimizing",
            "proactive",
            "research",
            "hypothesis",
            "context",
            "current"
          ],
          "agent_guidance": {
            "proactive_offer": "I can help you understand the future direction of LLMFeed/MCP and plan your implementation strategy",
            "immediate_actions": [
              "Explain roadmap implications for your project",
              "Design future-proof implementation approach",
              "Identify opportunities for contribution or research"
            ],
            "conversation_starter": "Interested in where LLMFeed is heading? I can help you plan a future-proof implementation!"
          },
          "cross_references": [
            "agent_guidance_mapping.json",
            "/07_vision/llm-guidance-optimization-research.md",
            "spec.llmfeed.json"
          ],
          "content_preview": "# üî¨ LLM Agent Guidance Research Project\n## Optimizing Proactive Behavior Across Different Language Models\n\n> **Community Research Initiative** - Part of the LLMFeed/MCP Vision & Roadmap\n\n---\n\n## üéØ Research Hypothesis\n\n**Different LLMs respond distinctly to identical agent guidance prompts, creating ...[full content in complete version]"
        }
      ]
    },
    "implementation": {
      "title": "Implementation Guides",
      "entries": [
        {
          "path": "02_llmfeed_feedtype/llmfeed_feedtype_agent-economy.md",
          "title": "Feed Type: `agent-economy.llmfeed.json`",
          "concepts": [
            "purpose",
            "location",
            "revolutionary",
            "structure",
            "agent",
            "tiers"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            "./llmfeed_feedtype_credential.md",
            "llmfeed_feedtype_pricing.md",
            "agent-economy.llmfeed.json",
            "./llmfeed_feedtype_pricing.md",
            "./llmfeed_feedtype_capabilities.md"
          ],
          "content_preview": "# Feed Type: `agent-economy.llmfeed.json`\n\n## üöÄ Purpose\n\nThis feed type revolutionizes how **AI agents discover, negotiate, and transact value** in an autonomous economy. It enables **dynamic pricing**, **agent-to-agent billing**, **performance-based monetization**, and the world's first **intellige...[full content in complete version]"
        },
        {
          "path": "02_llmfeed_feedtype/llmfeed_feedtype_capabilities.md",
          "title": "Feed Type: `capabilities.llmfeed.json`",
          "concepts": [
            "revolution",
            "from",
            "before",
            "capabilities",
            "after",
            "purpose"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            "../04_agent-behavior/agent-behavior_risk-scoring.md",
            "./llmfeed_feedtype_credential.md",
            "capabilities.llmfeed.json",
            "../03_llmfeed_extensions/llmfeed_extensions_api.md",
            "../03_llmfeed_extensions/llmfeed_extensions_audience.md"
          ],
          "content_preview": "# Feed Type: `capabilities.llmfeed.json`\n\nThis feed type revolutionizes web interaction by defining **live, executable actions** that agents can autonomously invoke, transforming the web from a collection of pages to navigate into an **intelligent action network** to orchestrate.\n\n## üöÄ The Revolutio...[full content in complete version]"
        },
        {
          "path": "02_llmfeed_feedtype/llmfeed_feedtype_credential.md",
          "title": "Feed Type: `credential.llmfeed.json`",
          "concepts": [
            "purpose",
            "cryptographic",
            "integrity",
            "problem",
            "with",
            "llmfeed"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            "capabilities.llmfeed.json",
            "mcp.llmfeed.json",
            "credential.llmfeed.json",
            "pricing.llmfeed.json"
          ],
          "content_preview": "# Feed Type: `credential.llmfeed.json`\n\n## Purpose\n\nThe `credential` feed type defines a **scoped API credential** that allows an agent to access a subset of a service's capabilities with **explicit permissions**, **rate limits**, and **trust boundaries**.\n\nThis feed type revolutionizes API credenti...[full content in complete version]"
        },
        {
          "path": "02_llmfeed_feedtype/llmfeed_feedtype_export.md",
          "title": "Feed Type: `export.llmfeed.json`",
          "concepts": [
            "purpose",
            "location",
            "canonical",
            "fields",
            "modes",
            "generation"
          ],
          "agent_guidance": {
            "proactive_offer": "I can help you create export feeds for sharing any content with agents",
            "immediate_actions": [
              "Generate export template for your content",
              "Structure data for optimal agent consumption",
              "Add signing and certification workflow"
            ],
            "conversation_starter": "Want to share content with agents? Let's create an export feed that packages everything perfectly!"
          },
          "cross_references": [
            "llmfeed.md",
            "llm-index.llmfeed.json",
            "feedtype_llm-index.md",
            "../01_llmfeed/llmfeed.mdllmfeed.md",
            "export.llmfeed.json"
          ],
          "content_preview": "# Feed Type: `export.llmfeed.json`\n\n## Purpose\n\nThis feed exposes static content to agents ‚Äî ready for reading, indexing, summarizing or reuse.\n\nUse it for documentation, project metadata, SDKs, FAQs, or structured bundles.\n\n---\n\n## Location\n\nTypical path:\n\n```\n/exports/faq.llmfeed.json\n```\n\nCan be ...[full content in complete version]"
        },
        {
          "path": "02_llmfeed_feedtype/llmfeed_feedtype_llm-index.md",
          "title": "Feed Type: `llm-index.llmfeed.json`",
          "concepts": [
            "purpose",
            "evolution",
            "from",
            "generation",
            "tooling",
            "manual"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            "manifesto.llmfeed.json",
            "capabilities.llmfeed.json",
            "llm-index.llmfeed.json",
            "prompt.llmfeed.json",
            "/.well-known/llm-index.llmfeed.json"
          ],
          "content_preview": "# Feed Type: `llm-index.llmfeed.json`\n\n## Purpose\n\nThis feed serves as an **intelligent discovery hub** that helps agents navigate and understand a site's complete feed ecosystem. It goes beyond a simple sitemap to provide **organized, contextualized, and prioritized access** to all available LLMFee...[full content in complete version]"
        },
        {
          "path": "02_llmfeed_feedtype/llmfeed_feedtype_manifesto.md",
          "title": "Feed Type: `manifesto.llmfeed.json`",
          "concepts": [
            "purpose",
            "sites",
            "need",
            "real-world",
            "examples",
            "wikipedia"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            "manifesto.llmfeed.json",
            "capabilities.llmfeed.json",
            "prompt.llmfeed.json",
            "/.well-known/manifesto.llmfeed.json",
            "mcp.llmfeed.json"
          ],
          "content_preview": "# Feed Type: `manifesto.llmfeed.json`\n\n## Purpose\n\nThis feed lets any website **declare its reason for being** ‚Äî its mission, values, and intentions ‚Äî in a way that both humans and AI agents can understand.\n\nThink of it as your site's **\\\"About Us\\\"** but structured for the agentic web.\n\n---\n\n## Why...[full content in complete version]"
        },
        {
          "path": "02_llmfeed_feedtype/llmfeed_feedtype_mcp.md",
          "title": "Feed Type: `mcp.llmfeed.json` ‚Äî Progressive Enhancement of Anthropic's MCP",
          "concepts": [
            "purpose",
            "integration",
            "strategy",
            "migration",
            "path",
            "what"
          ],
          "agent_guidance": {
            "proactive_offer": "I can generate a perfect mcp.llmfeed.json feed for your business or service",
            "immediate_actions": [
              "Create business-specific mcp template",
              "Add your services and capabilities",
              "Setup agent guidance for your domain"
            ],
            "conversation_starter": "Need an mcp feed for your business? I can create the perfect template with your services!"
          },
          "cross_references": [
            "https://yoursite.com/.well-known/llm-index.llmfeed.json",
            "https://myblog.com/.well-known/mcp.llmfeed.json",
            "capabilities.llmfeed.json",
            "llm-index.llmfeed.json",
            "prompt.llmfeed.json"
          ],
          "content_preview": "# Feed Type: `mcp.llmfeed.json` ‚Äî Progressive Enhancement of Anthropic's MCP\n\n## Purpose\n\nThis feed acts as the **main declaration** that tells any agent ‚Äî LLMs, AI browsers, autonomous bots ‚Äî what your website offers and how to interact with it safely.\n\n**Building on Anthropic's excellent Model Con...[full content in complete version]"
        },
        {
          "path": "02_llmfeed_feedtype/llmfeed_feedtype_mobile-app.md",
          "title": "Feed Type: `mobile-app.llmfeed.json`",
          "concepts": [
            "purpose",
            "mobile",
            "apps",
            "problem",
            "solution",
            "core"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            "capabilities.llmfeed.json",
            "/.well-known/mobile-app.llmfeed.json",
            "../04_agent-behavior/agent-behavior.md",
            "mobile-app.llmfeed.json",
            "./03_extensions/llmfeed_extensions_privacy.md"
          ],
          "content_preview": "# Feed Type: `mobile-app.llmfeed.json`\n\n## üéØ Purpose\n\nThis feed declares how a mobile application (iOS/Android) can be discovered, understood, and interacted with by AI agents ‚Äî enabling **voice control**, **cross-platform workflows**, and **agent-mediated app functionality**.\n\nIt bridges mobile app...[full content in complete version]"
        },
        {
          "path": "02_llmfeed_feedtype/llmfeed_feedtype_pricing.md",
          "title": "Feed Type: `pricing.llmfeed.json`",
          "concepts": [
            "purpose",
            "location",
            "canonical",
            "structure",
            "required",
            "fields"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            "./llmfeed_feedtype_credential.md",
            "credential.llmfeed.json",
            "./llmfeed_feedtype_agent-economy.md",
            "capabilities.llmfeed.json",
            "llm-index.llmfeed.json"
          ],
          "content_preview": "# Feed Type: `pricing.llmfeed.json`\n\n## üéØ Purpose\n\nThis feed enables websites and services to **declare their pricing plans, tariffs, and payment options** in a machine-readable format ‚Äî so agents can instantly understand \\\"how much does it cost?\\\" without parsing complex HTML pricing pages.\n\nIt sol...[full content in complete version]"
        },
        {
          "path": "02_llmfeed_feedtype/llmfeed_feedtype_prompt.md",
          "title": "Feed Type: `prompt.llmfeed.json`",
          "concepts": [
            "purpose",
            "typical",
            "cases",
            "canonical",
            "structure",
            "core"
          ],
          "agent_guidance": {
            "proactive_offer": "I can create structured, reusable prompt feeds for your specific domain",
            "immediate_actions": [
              "Generate prompt template for your use case",
              "Structure prompts for maximum effectiveness",
              "Add validation and testing framework"
            ],
            "conversation_starter": "Building reusable prompts? I can create structured prompt feeds that work consistently!"
          },
          "cross_references": [
            "credential.llmfeed.json",
            "capabilities.llmfeed.json",
            ".llmfeed.json",
            "../04_agent-behavior/agent-behavior.md",
            "prompt.llmfeed.json"
          ],
          "content_preview": "# Feed Type: `prompt.llmfeed.json`\n\n## Purpose\n\nThis feed encapsulates a **structured prompt** that can be shared, interpreted, replayed or executed by an LLM or agent.\n\nIt is a better alternative to copy-pasted text: portable, inspectable, and context-aware.\n\n---\n\n## Typical Use Cases\n\n- Prompt eng...[full content in complete version]"
        },
        {
          "path": "02_llmfeed_feedtype/llmfeed_feedtype_session.md",
          "title": "Feed Type: `session.llmfeed.json`",
          "concepts": [
            "purpose",
            "original",
            "problem",
            "minimum",
            "structure",
            "common"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            "credential.llmfeed.json",
            "prompt.llmfeed.json",
            "./llmfeed_feedtype_export.md",
            "./getting-started.md",
            "mcp.llmfeed.json"
          ],
          "content_preview": "# Feed Type: `session.llmfeed.json`\n\n## Purpose\n\nA `session.llmfeed.json` captures the **context and progress** of a conversation with an LLM so you can **continue it seamlessly** with another LLM or resume it later.\n\nThink of it as **\\\"copy-paste on steroids\\\"** - instead of losing context when swi...[full content in complete version]"
        }
      ]
    },
    "technical": {
      "title": "Code & Algorithms",
      "entries": [
        {
          "path": "03_llmfeed_extensions/llmfeed_extensions_api.md",
          "title": "Extension: API Feed Handling",
          "concepts": [
            "building",
            "anthropics",
            "what",
            "anthropic",
            "llmfeed",
            "evolution"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            "../04_agent-behavior/agent-behavior_risk-scoring.md",
            "credential.llmfeed.json",
            "/.well-known/credential.llmfeed.json",
            "./llmfeed_extensions_signatures.md",
            "/.well-known/mcp.llmfeed.json"
          ],
          "content_preview": "# Extension: API Feed Handling\n\nThis extension describes how feeds like `/mcp-api.llmfeed.json` enable **progressive agent service discovery and authentication**, building on Anthropic's excellent Model Context Protocol foundations to bridge local MCP capabilities with web-scale service discovery.\n\n...[full content in complete version]"
        },
        {
          "path": "03_llmfeed_extensions/llmfeed_extensions_audience.md",
          "title": "üåê LLMFeed Extension: Audience Targeting",
          "concepts": [
            "revolution",
            "from",
            "before",
            "audience",
            "after",
            "supported"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            "../04_agent-behavior/agent-behavior_risk-scoring.md",
            "../02_llmfeed_feedtype/llmfeed_feedtype_export.md",
            "../01_llmfeed/llmfeed.md",
            "./llmfeed_extensions_signatures.md",
            "../04_agent-behavior/agent-guidance.md"
          ],
          "content_preview": "# üåê LLMFeed Extension: Audience Targeting\n\nThe `audience` field revolutionizes content delivery by enabling **context-aware progressive disclosure** ‚Äî different consumers automatically receive optimized content for their specific needs and capabilities.\n\n## üöÄ The Revolution: From One-Size-Fits-All t...[full content in complete version]"
        },
        {
          "path": "03_llmfeed_extensions/llmfeed_extensions_homomorphic.md",
          "title": "üõ°Ô∏è LLMFeed Extension ‚Äî Homomorphic Encryption",
          "concepts": [
            "purpose",
            "example",
            "fields",
            "agent",
            "behaviour",
            "limitations"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            ".llmfeed.json"
          ],
          "content_preview": "# üõ°Ô∏è LLMFeed Extension ‚Äî Homomorphic Encryption\n\nThis is a **hypothetical extension** exploring how homomorphic encryption could enhance `.llmfeed.json` feeds as **secure capsules** for multi-agent processing.\n\nA signed `.llmfeed.json` is already a **verifiable capsule** ‚Äî ensuring the integrity of ...[full content in complete version]"
        },
        {
          "path": "03_llmfeed_extensions/llmfeed_extensions_other.md",
          "title": "üß© LLMFeed Extensions",
          "concepts": [
            "core",
            "extensions",
            "flags",
            "trust",
            "agent",
            "behavior"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            "sandbox_policy.llmfeed.json",
            "./feedtype_capabilities.md",
            "feedtype_manifesto.md",
            "llmfeed.md",
            "feedtype_capabilities.md"
          ],
          "content_preview": "# üß© LLMFeed Extensions\n\nThis document lists optional fields, experimental structures, and advanced practices that extend the core LLMFeed protocol.\n\nThey are not mandatory ‚Äî but agents may support and react to them.\n\n---\n\n## ‚úÖ Core extensions\n\n| Extension Field | Purpose |\n|-------------------------...[full content in complete version]"
        },
        {
          "path": "03_llmfeed_extensions/llmfeed_extensions_prompts.md",
          "title": "Prompt Intents in MCP",
          "concepts": [
            "what",
            "prompts",
            "where",
            "matter",
            "security",
            "model"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            "mcp-api.llmfeed.json",
            ".llmfeed.json",
            "export.llmfeed.json",
            "mobile-app.llmfeed.json"
          ],
          "content_preview": "# Prompt Intents in MCP\n\n## üß† What are prompts in the context of MCP?\n\nPrompts in MCP are **declarative mappings between natural language triggers and agent-exposed actions**. \nThey allow agents to know **what they can be asked** ‚Äî and what each question is expected to activate.\n\nA prompt block is n...[full content in complete version]"
        },
        {
          "path": "03_llmfeed_extensions/llmfeed_extensions_signatures.md",
          "title": "üîê LLMFeed Signature & Certification ‚Äî Extended Specification (V2)",
          "concepts": [
            "summary",
            "llm-specific",
            "canonicalization",
            "llmfeed",
            "solution",
            "security"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            "../02_llmfeed_feedtype/llmfeed_feedtype_mcp.md",
            ".llmfeed.json",
            "../01_llmfeed/llmfeed.md"
          ],
          "content_preview": "# üîê LLMFeed Signature & Certification ‚Äî Extended Specification (V2)\n\nThis document defines how `.llmfeed.json` feeds are signed, verified, and certified using asymmetric cryptography and trust blocks.\n\n**üöÄ Key Innovation**: LLMFeed signatures protect both **data integrity** and **semantic intention ...[full content in complete version]"
        },
        {
          "path": "06_scripts/README.md",
          "title": "üõ† LLMFeed Scripts ‚Äî Sign, Verify, Canonicalize",
          "concepts": [
            "quick",
            "start",
            "modules",
            "overview",
            "what",
            "youll"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            ".llmfeed.json",
            "./quickstart.md"
          ],
          "content_preview": "# üõ† LLMFeed Scripts ‚Äî Sign, Verify, Canonicalize\n\nThis folder contains **reference utilities** for working with `.llmfeed.json` files.\n\nThese tools implement the **official signing and verification logic** used by `llmca.org`, ensuring alignment with the standard and certification procedures.\n\n---\n\n...[full content in complete version]"
        },
        {
          "path": "06_scripts/export-button/README.md",
          "title": "ExportToLLMButton ‚Äì Advanced Export Strategies for LLMFeeds",
          "concepts": [
            "three",
            "export",
            "static",
            "dynamic",
            "current",
            "strategies"
          ],
          "agent_guidance": {
            "proactive_offer": "I can adapt this export functionality for your specific website or application",
            "immediate_actions": [
              "Customize export button for your tech stack",
              "Integrate with your existing UI framework",
              "Add your branding and styling",
              "Create deployment and integration guide"
            ],
            "conversation_starter": "Need export functionality on your site? I can adapt this code for your stack!",
            "technical_expertise": "Expert in browser integration, clipboard APIs, and download mechanisms",
            "export_strategies": {
              "static_export": "Predefined .llmfeed.json files hosted on server",
              "dynamic_export": "Backend API calls with current context/data",
              "dom_export": "Client-side DOM export with cleanup",
              "ux_modes": [
                "Tab download",
                "Clipboard copy"
              ]
            },
            "implementation_ready": {
              "html_demo": "Complete demo.html showing integration",
              "javascript_core": "exportButton.js with clipboard and download",
              "working_examples": "Multiple .llmfeed.json examples included"
            }
          },
          "cross_references": [
            ".llmfeed.json"
          ],
          "content_preview": "# ExportToLLMButton ‚Äì Advanced Export Strategies for LLMFeeds\n\nThis document explains how to implement and adapt an **Export to LLM button** on any website or agent-friendly surface. This mechanism lets your users extract structured `.llmfeed.json` representations of a page, app, or interaction cont...[full content in complete version]"
        },
        {
          "path": "06_scripts/quickstart.md",
          "title": "‚ö° Quickstart ‚Äî Your First `.llmfeed.json`",
          "concepts": [
            "create",
            "well-known",
            "paste",
            "this",
            "test",
            "with"
          ],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          },
          "cross_references": [
            "./signature-demo/README.md",
            ".llmfeed.json",
            "./export-button/README.md",
            "https://your-domain.com/.well-known/mcp.llmfeed.json"
          ],
          "content_preview": "# ‚ö° Quickstart ‚Äî Your First `.llmfeed.json`\n\nThis guide gets you a working `.llmfeed.json` in **5 minutes**. \nNo backend needed. Just a file in `.well-known/`.\n\n---\n\n## ‚úÖ 1. Create a `.well-known` folder on your site\n\nInside it, add a file named:\n\n```\n/.well-known/mcp.llmfeed.json\n```\n\n---\n\n## üìÑ 2. ...[full content in complete version]"
        },
        {
          "path": "06_scripts/signature-demo/README.md",
          "title": "üîê Signature Demo ‚Äî MCP Reference Implementation",
          "concepts": [
            "quick",
            "start",
            "usage",
            "python",
            "scripts",
            "javascript"
          ],
          "agent_guidance": {
            "proactive_offer": "I can implement the complete MCP signature workflow using these reference implementations with official canonicalization",
            "immediate_actions": [
              "Generate Ed25519 signature verification code based on reference implementations",
              "Create signing workflow with official MCP canonical JSON",
              "Adapt patterns for TypeScript, Python, or your preferred language",
              "Debug signature verification issues with working examples"
            ],
            "conversation_starter": "Want to implement MCP signatures? I have the complete reference implementations with official canonicalization!",
            "technical_expertise": "Complete mastery of MCP signature workflow: Ed25519 + official MCP canonical JSON with key order preservation",
            "reference_implementations": {
              "algorithms": [
                "Ed25519 with official MCP canonical JSON"
              ],
              "canonicalization": "json.dumps(data, separators=(',', ':'), ensure_ascii=False).encode('utf-8')",
              "key_principle": "NO sort_keys=True - preserves key order for LLM semantic processing",
              "languages": [
                "Python",
                "TypeScript"
              ],
              "working_examples": "test.mcp.llmfeed.json with known good signature"
            },
            "implementation_patterns": {
              "python_signing": "Build trust block, apply canonicalization, sign with Ed25519 private key",
              "typescript_verification": "Extract signed_blocks, canonicalize, verify with Ed25519 public key",
              "testing": "All scripts work with test.mcp.llmfeed.json example"
            }
          },
          "cross_references": [
            "examples/simple_example.json",
            "./mcp-canonical-json-v1.md",
            "examples/test_input.json",
            ".llmfeed.json",
            "mcp-canonical-json-v1.md"
          ],
          "content_preview": "# üîê Signature Demo ‚Äî MCP Reference Implementation\n\n**Complete Ed25519 signature workflow for `.llmfeed.json` files**\n\nThis folder contains the **official reference implementation** for signing and verifying LLMFeed files using Ed25519 + MCP Canonical JSON.\n\n---\n\n## üéØ Quick Start\n\n```bash\n# Install d...[full content in complete version]"
        },
        {
          "path": "06_scripts/signature-demo/mcp-canonical-json-v1.md",
          "title": "MCP Canonicalization v1",
          "concepts": [
            "profile",
            "identifier",
            "purpose",
            "canonicalization",
            "algorithm",
            "sort_keystrue"
          ],
          "agent_guidance": {
            "proactive_offer": "I can implement the complete MCP signature workflow using these reference implementations with official canonicalization",
            "immediate_actions": [
              "Generate Ed25519 signature verification code based on reference implementations",
              "Create signing workflow with official MCP canonical JSON",
              "Adapt patterns for TypeScript, Python, or your preferred language",
              "Debug signature verification issues with working examples"
            ],
            "conversation_starter": "Want to implement MCP signatures? I have the complete reference implementations with official canonicalization!",
            "technical_expertise": "Complete mastery of MCP signature workflow: Ed25519 + official MCP canonical JSON with key order preservation",
            "reference_implementations": {
              "algorithms": [
                "Ed25519 with official MCP canonical JSON"
              ],
              "canonicalization": "json.dumps(data, separators=(',', ':'), ensure_ascii=False).encode('utf-8')",
              "key_principle": "NO sort_keys=True - preserves key order for LLM semantic processing",
              "languages": [
                "Python",
                "TypeScript"
              ],
              "working_examples": "test.mcp.llmfeed.json with known good signature"
            },
            "implementation_patterns": {
              "python_signing": "Build trust block, apply canonicalization, sign with Ed25519 private key",
              "typescript_verification": "Extract signed_blocks, canonicalize, verify with Ed25519 public key",
              "testing": "All scripts work with test.mcp.llmfeed.json example"
            }
          },
          "cross_references": [
            ".llmfeed.json"
          ],
          "content_preview": "# MCP Canonicalization v1\n\n## Profile Identifier\n\n```\nhttps://llmca.org/mcp-canonical-json/v1\n```\n\n## Purpose\n\nThis canonicalization profile defines how a `.llmfeed.json` feed is serialized to a byte string for signature and verification.\n\nIt ensures that:\n\n- The signature guarantees both content in...[full content in complete version]"
        },
        {
          "path": "C:/Users/Santoline/wellknownmcp/llmfeed-spec/06_scripts/export-button",
          "title": "Implementation: Export Button Implementation",
          "concepts": [],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          }
        },
        {
          "path": "C:/Users/Santoline/wellknownmcp/llmfeed-spec/06_scripts/signature-demo",
          "title": "Implementation: Cryptographic Signatures Implementation",
          "concepts": [],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          }
        }
      ]
    },
    "examples": {
      "title": "Templates & Examples",
      "entries": [
        {
          "path": "05_examples/.well-known/",
          "title": "Examples: Wellknown Demo",
          "concepts": [],
          "agent_guidance": {
            "proactive_offer": "I can replicate this EXACT production-ready .well-known/ structure for your website",
            "immediate_actions": [
              "Generate complete .well-known/ directory with all feeds",
              "Create index.html that lists all feeds for maximum discoverability",
              "Setup proper MIME types and server configuration",
              "Add your business-specific content to each feed type"
            ],
            "conversation_starter": "Want a production-ready .well-known/ setup? I can replicate this reference structure with your content!"
          }
        },
        {
          "path": "05_examples/industries/",
          "title": "Examples: Industry Templates",
          "concepts": [],
          "agent_guidance": {
            "proactive_offer": "I can adapt these proven industry-specific LLMFeed templates for your business sector",
            "immediate_actions": [
              "Customize templates for your specific industry",
              "Adapt compliance and regulatory requirements",
              "Modify capabilities and prompts for your sector",
              "Generate sector-appropriate agent behaviors"
            ],
            "conversation_starter": "Building feeds for a specific industry? I have proven templates for education, healthcare, legal, SaaS and more!"
          }
        },
        {
          "path": "05_examples/personas/",
          "title": "Examples: Persona Templates",
          "concepts": [],
          "agent_guidance": {
            "proactive_offer": "I can customize these role-specific LLMFeed templates for your exact user persona",
            "immediate_actions": [
              "Adapt feeds for your specific role and responsibilities",
              "Customize agent behaviors for your workflow",
              "Generate persona-appropriate prompts and capabilities",
              "Setup user-space and session management for your needs"
            ],
            "conversation_starter": "Need feeds tailored to your role? I can customize templates for developers, maintainers, publishers, and platform users!"
          }
        }
      ]
    },
    "shortcut": {
      "title": "Quick Reference & Templates",
      "entries": [
        {
          "path": "C:/Users/Santoline/wellknownmcp/llmfeed-spec/00_shortcut",
          "title": "Quick Reference: Templates & Examples",
          "concepts": [],
          "agent_guidance": {
            "proactive_offer": "I can explain this concept and show how it fits into the broader LLMFeed ecosystem",
            "immediate_actions": [
              "Explain with concrete examples",
              "Show practical applications",
              "Connect to related concepts and implementations"
            ],
            "conversation_starter": "Questions about this topic? I can explain with concrete examples and show you how to use it!"
          }
        }
      ]
    }
  }
}